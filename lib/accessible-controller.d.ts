declare class AccessibleController {
    private static instance;
    static ID_PREFIX: string;
    private runtime;
    private scaleX;
    private scaleY;
    private displayWidth;
    private displayHeight;
    private accessibleDomRoot;
    private accessibleSwitchBtn;
    private engineNodeRoot;
    private engineNodeMap;
    private oldVirtualTree;
    private virtualTree;
    private virtualTreeTimeout;
    private updateViewTimeout;
    private isDebugging;
    private isOpeningAccessibility;
    private isInited;
    private maskSettingForOtherBroEl;
    private peddingChange;
    private constructor();
    static getInstance(): AccessibleController;
    init(options: {
        runtime: RUNTIME;
        h5EgretPlayerWrapperId: string;
        designWidth: number;
        designHeight: number;
        scaleMode: string;
        debugging: boolean;
        switchDesc: string;
    }): void;
    firstPaintInit(tree: AccessibleEngineStageNode): void;
    updateSelfAccessibleView(node: AccessibleEngineNode | AccessibleEngineContainer): void;
    firstPaintAccessibleView(node: AccessibleEngineNode | AccessibleEngineContainer): void;
    deleteAccessibleView(node: AccessibleEngineNode | AccessibleEngineContainer): void;
    private engineNodeBeAccessible;
    private engineNodeUpdate;
    private engineNodeBeUnaccessible;
    private createNativeNode;
    private updateNativeNode;
    private deleteNativeNode;
    private addChange;
    private updateTreeByChange;
    private updateAndCompareVirtualTree;
    private updateAccessibleAllView;
    private createAccessibleNative;
    private changeAccessibleNative;
    private changeAccessibleDom;
    private createAccessibleDom;
    private updateVirtualTree;
    private deepUpdateVirtualTree;
    private compareVirtualTree;
    clearAccessibleView(container?: AccessibleEngineNode | AccessibleEngineContainer): void;
    private updateDom;
    private getAccessNodeId;
    private isWrapperNode;
    private getAccessibleVirtualParent;
    private searchVirtualNode;
    updateOtherBroVisible(visible: boolean, selfNode: any): void;
}
export default AccessibleController;
